Особоенность символьных устройст: 
1)последовательный поток данных(Байт за байтом)
2)только одна позиция текущая
3)Невозможность обратиться к случайным данным

Блочные устройтва: диски, дискеты, флешки
Особенность:
1)Обращение к данным случайным образом
2)Доступ к любому адресу в устройстве
На блочных устройствах есть сектор и блок. Сектор наименьший адрессованнный элемент блочного устройства(устройство не может работать элементов данных, размеров менее сектора
раньше 512 байт, сейчас 4 килобайта)
Блок не больше размера страницы памяти используется для ядра и ПО.
Очеред запросов
Файловая система отправляет запрос к устройству в очередь.
Очередь содержит список запросов на ввод/вывод и усправляющую информацию.
Файловая система = способ отбражения физхических данных.
Задачи файловой системы
1)Отображение логического представления
2)Реализация последователльского интерфейса
3)упорядочение файлов
4)защита данных в случае аппаратного сбоя
5)реализация контроля доступа к файлам
Иерархия файловой системы
/-корень файловой системы
/boot - файлы загрузчика и ядро
/etc - конфигурационные файлы
/usr./usr/local -программы пользователя
/ben,/usr/bin - исполняемые файлы
/home -домашние каталоги пользователей
Абсолютныеи относительные пути к файлу
Абсолютный путь к файлу - путь от корня до файловой системы
Относительный - путь от корневого каталога
Основные типа файловой системы inode
Индексный дескриптор содержит метаданные в файлах
Тип файла, атрибуты и права доступа
inode содержитчисло ссылок на файлы 
Типы фалов:
1)обычные файлы(txt) обозначаются через -
2)директории d
3)ссылки l
4)сокеты s
5)каналы p
6)файл символьного устройства
7)блочные устройства
Прерывания и планироващик процессов.
Иногда сигналы можно игнорировать
Сигналы это способ оповестить процесс о наступлении события.
Каждый сигнал имеет обработчик по умолчанию
ctr+z sigstop
fg вывод из сотояния sigstop
Прерывания - операция которая не может быть игнорирована со стороны процесса
Аппартатные прерывания вохникают в любой момент времени.
Программные возникают при выполнении программы синхронно.
Планировщик задач
Планировщик - компонент ядра определяющий следующий процесс на выполнение.
Процессы, которые неготовы к выполнению блокируются ядром.
